#include <stdio.h>
#include <malloc.h>

struct nod {
            struct nod *left;
            char data;
            struct nod *right;
};

typedef struct nod NOD;
typedef NOD POKOK;

NOD *NodBaru(char item) {
            NOD *n;
            n = (NOD*) malloc(sizeof(NOD));
            if(n != NULL) {
                        n->data = item;
                        n->left = NULL;
                        n->right = NULL;
            }
            return n;
}

void BinaPokok(POKOK **T) {
            *T = NULL;
}
typedef enum { FALSE = 0, TRUE = 1} BOOL;

BOOL PokokKosong(POKOK *T) {
            return((BOOL)(T == NULL));
}
void TambahNod(NOD **p, char item) {
            NOD *n;
            n = NodBaru(item);
*p = n;
}
void inOrder(POKOK *T) {
            if(!PokokKosong(T)) {
                        inOrder(T->left);
                        printf("%c ", T->data);
                        inOrder(T->right);
            }
}

int main()
{
            POKOK *kelapa;
            char buah;
            BinaPokok(&kelapa);
            TambahNod(&kelapa, buah = 'W');
            TambahNod(&kelapa->left, buah = 'A');
            TambahNod(&kelapa->left->right, buah = 'D');
            TambahNod(&kelapa->right, buah = 'Y');
            TambahNod(&kelapa->right->right, buah = 'I');
            TambahNod(&kelapa->right->right->left, buah = 'F');
            printf("\nTampilan secara InOrder: ");
            inOrder(kelapa);

            printf("\n\n");
            return 0;
        }
